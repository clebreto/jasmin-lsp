#!/usr/bin/env python3
"""
Visual demonstration of the new expandable hover format for constants/params.
This script shows what the hover will look like in VS Code.
"""

print("\n" + "=" * 80)
print("NEW HOVER FORMAT FOR CONSTANTS/PARAMS")
print("=" * 80 + "\n")

print("✨ Style: Copied from C++ extension (expandable <details> section)\n")

# Example 1: Simple constant
print("1️⃣  SIMPLE CONSTANT: param int BASE = 100;")
print("-" * 80)
print("When you hover over 'BASE', you see:\n")
print("┌─────────────────────────────────────────┐")
print("│ ```jasmin                               │")
print("│ param BASE: int                         │")
print("│ ```                                     │")
print("│                                         │")
print("│ Value ▶                                 │  ← Click to expand")
print("└─────────────────────────────────────────┘")
print("\nWhen expanded:")
print("┌─────────────────────────────────────────┐")
print("│ ```jasmin                               │")
print("│ param BASE: int                         │")
print("│ ```                                     │")
print("│                                         │")
print("│ Value ▼                                 │")
print("│   `100`                                 │  ← Value shown once, no duplication")
print("└─────────────────────────────────────────┘")
print()

# Example 2: Computed constant
print("2️⃣  COMPUTED CONSTANT: param int TOTAL = BASE + OFFSET;")
print("-" * 80)
print("When you hover over 'TOTAL', you see:\n")
print("┌─────────────────────────────────────────┐")
print("│ ```jasmin                               │")
print("│ param TOTAL: int                        │")
print("│ ```                                     │")
print("│                                         │")
print("│ Value ▶                                 │  ← Click to expand")
print("└─────────────────────────────────────────┘")
print("\nWhen expanded:")
print("┌─────────────────────────────────────────┐")
print("│ ```jasmin                               │")
print("│ param TOTAL: int                        │")
print("│ ```                                     │")
print("│                                         │")
print("│ Value ▼                                 │")
print("│   Declared: `BASE + OFFSET`             │  ← Source expression")
print("│   Computed: `150`                       │  ← Evaluated result")
print("└─────────────────────────────────────────┘")
print()

# Example 3: Complex computed constant
print("3️⃣  COMPLEX EXPRESSION: param int SIZE = START + (COUNT * 2);")
print("-" * 80)
print("When you hover over 'SIZE', you see:\n")
print("┌─────────────────────────────────────────┐")
print("│ ```jasmin                               │")
print("│ param SIZE: int                         │")
print("│ ```                                     │")
print("│                                         │")
print("│ Value ▶                                 │  ← Click to expand")
print("└─────────────────────────────────────────┘")
print("\nWhen expanded:")
print("┌─────────────────────────────────────────┐")
print("│ ```jasmin                               │")
print("│ param SIZE: int                         │")
print("│ ```                                     │")
print("│                                         │")
print("│ Value ▼                                 │")
print("│   Declared: `START + (COUNT * 2)`       │  ← Full expression preserved")
print("│   Computed: `350`                       │  ← Final value")
print("└─────────────────────────────────────────┘")
print()

print("=" * 80)
print("KEY IMPROVEMENTS")
print("=" * 80)
print()
print("✅ Values in expandable section (like C++ extension)")
print("✅ No duplication for simple constants")
print("✅ Shows both declared and computed for expressions")
print("✅ Clean, professional appearance")
print("✅ Reduces visual clutter in hover")
print("✅ Easy to expand when you need the value")
print()

print("=" * 80)
print("COMPARISON: BEFORE vs AFTER")
print("=" * 80)
print()
print("BEFORE:")
print("  param BASE: int = 100")
print("  ↑ Value duplicated from source code")
print()
print("AFTER:")
print("  param BASE: int")
print("  Value ▶")
print("  ↑ Clean declaration, value expandable")
print()

print("=" * 80)
print("✨ Run test_hover_details.py to see it in action!")
print("=" * 80)
print()
